°°° La lezione 11 è centrata sui file, dalla tipologia di file e come effettuare operazioni di lettura, scrittura.
        Vengono introdotto funzioni specifiche per lavorare con i file come open(), write() che verranno trattate in questo file.
        Nel corso delle varie lezioni veranno fatti solo riferimenti a tipi != di file testuali come i file binari ma non saranno trattati nello specifico al momento.



___Da leggere: per aprire correttamente un file ed evitare errori di escape usa il  percorso assoluto del file e sostituisci il backslash \  con  lo slash /
                        op = open("C:/test/test.txt","r")

        - Cos'è un file? Nient'altro che un contenitore di informazioni, una sequenza di dati posizionati su linee.
            Tipologie di file:
                # File Binari (video, immagini, suoni, dati ....)
                # File estuali (HTML, csv, JSON .....)

_Funzionamento:
    La classe astratta TextIOBase viene implementata in TextIOWrapper che eredita e fornisce i metodi per operare con i file,
    operare con file è possibile solo se otteniamo un istanza del file, l'istanza del file l'ottieni con la funzione open() che restituisce che a seconda della modalità:

     Python ha un tipo dati file con cui è in grado di:
                - Creare
                - Modificare
                - Leggere _BufferReader
                - Scrivere _BufferWriter

    ° Proprietà dei File:
        Lettura, scrittura, modifica.

            Un file può essere aperto attraverso la funzione
            open("percorso",modalità) e accetta due parametri,
                1. Il percorso del file
                2. La modalità, ci sono tre modalità diverse:
                    -"r"     per leggere che sta per read.
                    - "w"   scrittura che sta per write.
                    - "a"     per la sola modifica del file

            La funzione open() fà si che viene inizializzata una variabile di tipo FILE!
                Cosa succede internamente? accade che Python apre una connessione con il file.
                    ° La sintassi è la seguente:
                            read-file           =  open("D:/.../.../name-file.txt", "r")                   --> per aprire un file in lettura
                            write-on-file   = open("D:/.../.../name-file.txt", "w")                  --> per aprire un file in scrittura
                            modify-file       = open(D:/.../.../name-file.txt", "a")                    --> similmente ma per modificarne il contenuto
                                A cui si può aggiungere alla mode
                                        "b" per file binari:
                                            read-file = open("D:/.../.../name-file.txt", "rb")                   --> per leggere su file binari
                                            read-file = open("D:/.../.../name-file.txt", "wb")                   --> per aprire in mod scrittura file binari
                                        "t" per file di testo (c'è di default)

                Chiusra della connessione con il metodo close().

    Vogliamo concentrarci su operazioni di Lettura e scrittura.
        Metodi in Lettura:
            I file aperti in questa modalità abbiamo detto che possono essere iterati per per leggere il contenuto delle line.
            file.read(n)        --> legge n caratteri a partire dall'inizio del file

                In lettura possono esserci utili anche i metodi per lavorare con le stringhe:
                    line.strip()    --> per eliminare gli spazi tra una linea e l'altra



            Operazioni possibili sui file:
                - Creare un file    --> pickAFile()
                - Iterare su un file vale a dire ottenere tutte le righe del file, ciasuna riga è una stringa.
                - Python e in generale altri linguaggi leggono riga per riga (riga = linea) dove ogni iterazione restituisce la riga letta inserendo tutte le occorrenze di quella
                    riga in una stringa.







